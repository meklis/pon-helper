<?php


namespace PonHelper\Storage;


use DI\Annotation\Inject;
use InvalidArgumentException;
use PonHelper\Models\SystemAction;
use PonHelper\Models\User\User;

class SystemActionsStorage extends AbstractStorage
{
    protected $tableName = 'system_actions';

    /**
     * @Inject
     * @var UserStorage
     */
    protected $userStorage;

    public function fill($object)
    {
        $object = parent::fill($object); // TODO: Change the autogenerated stub
        $object->user = $this->userStorage->getById($object->user_id);
        return $object;
    }

    public function add($object)
    {
        $object->user_id = $object->user->getId();
        return parent::add($object);
    }

    public function update($object)
    {
        $object->user_id = $object->user->getId();
        return parent::update($object);
    }

    /**
     * @return SystemAction[]
     */
    public function fetchAll() {
        $psth = $this->pdo->query("SELECT id, created_at, `action`, user_id, message, meta, status FROM {$this->tableName}");
        $response = [];
        foreach ($psth->fetchAll() as $arr) {
            $response[] = $this->fillByArr(SystemAction::class, $arr);
        }
        return $response;
    }

    function getById($id) {
        return $this->getObjectById(User::class, $id);
    }
}